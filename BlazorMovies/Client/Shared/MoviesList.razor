@inject IJSRuntime js
@inject IMoviesRepository moviesRepository

@if (Movies.Count > 0)
{
    <div class="movies-container">
        <GenericList List="Movies">
            <ElementTemplate Context="movie">
                <IndividualMovie Movie="movie" DeleteMovie="DeleteMovie" @key="movie.Id" />
            </ElementTemplate>
        </GenericList>
    </div>
}
else
{
<div>
    <p>No Movies to show...</p>
</div>
}




@code {
    [Parameter] public List<Movie> Movies { get; set; }


    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
        Console.WriteLine($"OnAfterRender. firstRender = {firstRender}");
    }

    protected override bool ShouldRender()
    {
        return true;
    }

    private async Task DeleteMovie(Movie movie)
    {
        var confirmed = await js.Confirm($"Are you sure you want to delete {movie.Title}?");

        if (confirmed)
        {
            await moviesRepository.DeleteMovie(movie.Id);
            Movies.Remove(movie);
        }

    }

}
